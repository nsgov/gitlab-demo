stages:
  - compile
  - build

services:
  - docker:dind

variables:
  DOCKER_USER: 'hfxdevopdemo'
  CONTAINER_NAME: 'hfxdevopdemo/simpleweb'
  
# This stage compiles the webserver code and then artifacts the binary & html for 1 week
Compile Webserver:
  image: docker.io/golang
  stage: compile
  environment: qa
  script:
    - find . -name "webserver.go" -exec go build {} \;
  artifacts:
    paths: 
    - webserver
    - devops.html
    expire_in: 1 week
  
# This stage builds the docker image and tags it as hfxdevopdemo/simpleweb:dev, it then pushes it to Docker Hub. 
# We're using protected project variables for the user/password.
Build Dev Tag:
  stage: build
  environment: dev
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
    - docker build -t ${CONTAINER_NAME}:dev .
    - docker push ${CONTAINER_NAME}:dev
    
# This stage builds the docker image and tags it as hfxdevopdemo/simpleweb:latest, it then pushes it to Docker Hub. 
# We're using protected project variables for the user/password.
Build Latest Tag:
  stage: build
  environment: prod
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
    - docker build -t ${CONTAINER_NAME}:latest .
    - docker push ${CONTAINER_NAME}:latest
  only:
    - master
